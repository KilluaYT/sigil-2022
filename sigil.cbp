<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="sigil" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="MinGW32 Debug">
				<Option output="lib/mingw32/sigil-bare-debug" prefix_auto="1" extension_auto="1" />
				<Option working_dir="" />
				<Option object_output="obj/mingw32-debug/" />
				<Option type="2" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
					<Add option="-DDEBUG" />
				</Compiler>
				<Linker>
					<Add library="lib/mingw32/libfreetype.dll.a" />
					<Add library="lib/mingw32/libSOIL.a" />
					<Add library="lib/mingw32/libglfw3.a" />
					<Add library="lib/mingw32/libglew32.dll.a" />
					<Add library="opengl32" />
					<Add library="gdi32" />
				</Linker>
				<ExtraCommands>
					<Add after="cmd /c if exist bin\mingw32\libsigil-debug.a del bin\mingw32\libsigil-debug.a" />
					<Add after="ar.exe -rcs bin\mingw32\libsigil-debug.a lib\mingw32\*.a" />
					<Mode after="always" />
				</ExtraCommands>
			</Target>
			<Target title="MinGW32 Release">
				<Option output="lib/mingw32/sigil-bare-release" prefix_auto="1" extension_auto="1" />
				<Option working_dir="" />
				<Option object_output="obj/mingw32-release/" />
				<Option type="2" />
				<Option compiler="gcc" />
				<Linker>
					<Add library="lib/mingw32/libfreetype.dll.a" />
					<Add library="lib/mingw32/libSOIL.a" />
					<Add library="lib/mingw32/libglfw3.a" />
					<Add library="lib/mingw32/libglew32.dll.a" />
					<Add library="opengl32" />
					<Add library="gdi32" />
				</Linker>
				<ExtraCommands>
					<Add before='cmd /c echo &quot;cleaning...&quot;' />
					<Add before="cmd /c del *.o" />
					<Add before="cmd /c del *.obj" />
					<Add before="cmd /c if exist bin\mingw32\libsigil.a del bin\mingw32\libsigil.a" />
					<Add after='cmd /c echo &quot;extracting object files...&quot;' />
					<Add after="ar.exe -x lib\mingw32\libglfw3.a" />
					<Add after="ar.exe -x lib\mingw32\libSOIL.a" />
					<Add after="ar.exe -x lib\mingw32\libsigil-bare-release.a" />
					<Add after="ar.exe -x lib\mingw32\freetype.a" />
					<Add after="ar.exe -x lib\mingw32\libglew32.dll.a" />
					<Add after='cmd /c echo &quot;building single static library...&quot;' />
					<Add after="ar.exe -rcs bin\mingw32\libsigil.a *.o *.obj" />
					<Add after='cmd /c echo &quot;cleaning up...&quot;' />
					<Add after="cmd /c del *.o" />
					<Add after="cmd /c del *.obj" />
					<Add after='cmd /c echo &quot;done&quot;' />
					<Mode after="always" />
				</ExtraCommands>
			</Target>
			<Target title="GCC Debug">
				<Option output="lib/gcc/sigil-bare" prefix_auto="1" extension_auto="1" />
				<Option working_dir="" />
				<Option object_output="obj/gcc/" />
				<Option type="2" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
				</Compiler>
				<Linker>
					<Add option="-lgl" />
					<Add library="lib/gcc/libfreetype.dll.a" />
					<Add library="lib/gcc/libSOIL.a" />
					<Add library="lib/gcc/libglfw3.a" />
					<Add library="lib/gcc/libglew32.dll.a" />
				</Linker>
				<ExtraCommands>
					<Add before='echo &quot;cleaning...&quot;' />
					<Add before="rm -f *.o" />
					<Add after='echo &quot;extracting object files...&quot;' />
					<Add after="ar -x lib/gcc/libglfw3.a" />
					<Add after="ar -x lib/gcc/libSOIL.a" />
					<Add after="ar -x lib/gcc/libsigil-bare.a" />
					<Add after="ar -x lib/gcc/libfreetype.a" />
					<Add after="ar -x lib/gcc/libGLEW.a" />
					<Add after='echo &quot;building single static library...&quot;' />
					<Add after="ar -rcs bin/gcc/libsigil-debug.a *.o" />
					<Add after='echo &quot;cleaning up...&quot;' />
					<Add after="rm -f *.o" />
					<Add after='echo &quot;done&quot;' />
					<Mode after="always" />
				</ExtraCommands>
			</Target>
			<Target title="GCC Release">
				<Option output="lib/gcc/sigil-bare" prefix_auto="1" extension_auto="1" />
				<Option working_dir="" />
				<Option object_output="obj/gcc/" />
				<Option type="2" />
				<Option compiler="gcc" />
				<Linker>
					<Add option="-lgl" />
					<Add library="lib/gcc/libfreetype.dll.a" />
					<Add library="lib/gcc/libSOIL.a" />
					<Add library="lib/gcc/libglfw3.a" />
					<Add library="lib/gcc/libglew32.dll.a" />
				</Linker>
				<ExtraCommands>
					<Add before='echo &quot;cleaning...&quot;' />
					<Add before="rm -f *.o" />
					<Add after='echo &quot;extracting object files...&quot;' />
					<Add after="ar -x lib/gcc/libglfw3.a" />
					<Add after="ar -x lib/gcc/libSOIL.a" />
					<Add after="ar -x lib/gcc/libsigil-bare.a" />
					<Add after="ar -x lib/gcc/libfreetype.a" />
					<Add after="ar -x lib/gcc/libGLEW.a" />
					<Add after='echo &quot;building single static library...&quot;' />
					<Add after="ar -rcs bin/gcc/libsigil.a *.o" />
					<Add after='echo &quot;cleaning up...&quot;' />
					<Add after="rm -f *.o" />
					<Add after='echo &quot;done&quot;' />
					<Mode after="always" />
				</ExtraCommands>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add directory="src" />
			<Add directory="src/ft2" />
		</Compiler>
		<Unit filename="src/internal/circle.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/internal/circle.h" />
		<Unit filename="src/internal/line.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/internal/line.h" />
		<Unit filename="src/internal/point.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/internal/point.h" />
		<Unit filename="src/internal/rectangle.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/internal/rectangle.h" />
		<Unit filename="src/internal/shaders.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/internal/shaders.h" />
		<Unit filename="src/internal/sprite.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/internal/sprite.h" />
		<Unit filename="src/internal/text.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/internal/text.h" />
		<Unit filename="src/internal/triangle.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/internal/triangle.h" />
		<Unit filename="src/libdrawtext/drawgl.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/libdrawtext/drawtext.h" />
		<Unit filename="src/libdrawtext/drawtext_impl.h" />
		<Unit filename="src/libdrawtext/font.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/libdrawtext/utf8.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/sl.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/sl.h" />
		<Unit filename="src/util/gldebugging.c">
			<Option compilerVar="CC" />
			<Option target="MinGW32 Debug" />
			<Option target="MinGW32 Release" />
		</Unit>
		<Unit filename="src/util/gldebugging.h">
			<Option target="MinGW32 Debug" />
			<Option target="MinGW32 Release" />
		</Unit>
		<Unit filename="src/util/images.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/util/images.h" />
		<Unit filename="src/util/shader.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/util/shader.h" />
		<Unit filename="src/util/transform.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/util/transform.h" />
		<Extensions>
			<code_completion />
			<envvars />
			<debugger />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
